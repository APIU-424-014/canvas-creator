Todo:
use mouse events to collect data to fill modeInputCollector
clean up PathCollector
figure out whether to use html element directly or its id is the better choice to keep a reference to it
decide where to use which .class for CSS formating
Arg needs to handle type.image as ImageSource (using HtmlElementId??)


create subclasses following this list {
===Methods===
==Drawing==
CanvasRenderingContext2D.arc()
CanvasRenderingContext2D.arcTo()
CanvasRenderingContext2D.bezierCurveTo()
CanvasRenderingContext2D.drawImage()
CanvasRenderingContext2D.fillRect()
CanvasRenderingContext2D.fillText()
CanvasRenderingContext2D.lineTo()
CanvasRenderingContext2D.moveTo()
CanvasRenderingContext2D.quadraticCurveTo()
CanvasRenderingContext2D.rect()
CanvasRenderingContext2D.strokeRect()
CanvasRenderingContext2D.strokeText()
==strong drawing (looks different if applied on a canvas above an other canavs, as if applied last on the lower)==
CanvasRenderingContext2D.clearRect()
==Staging==
CanvasRenderingContext2D.beginPath()
CanvasRenderingContext2D.clip()
CanvasRenderingContext2D.closePath()
CanvasRenderingContext2D.restore()
CanvasRenderingContext2D.save()
==Other==
CanvasRenderingContext2D.createImageData()
CanvasRenderingContext2D.getImageData()
CanvasRenderingContext2D.isPointInPath()
CanvasRenderingContext2D.isPointInStroke()
CanvasRenderingContext2D.measureText()
CanvasRenderingContext2D.putImageData()
==Transformation==
CanvasRenderingContext2D.rotate()
CanvasRenderingContext2D.scale()
CanvasRenderingContext2D.setTransform()
CanvasRenderingContext2D.transform()
CanvasRenderingContext2D.translate()
==Style Creator==
CanvasRenderingContext2D.createLinearGradient()
CanvasRenderingContext2D.createPattern()
CanvasRenderingContext2D.createRadialGradient()
==Style Applier==
CanvasRenderingContext2D.fill()
CanvasRenderingContext2D.stroke()
==Stroke Style Attribute Manipulator==
CanvasRenderingContext2D.getLineDash()
CanvasRenderingContext2D.setLineDash()
===Attributes===
==Main==
CanvasRenderingContext2D.canvas
==Style==
*CanvasRenderingContext2D.fillStyle
*CanvasRenderingContext2D.globalAlpha
*CanvasRenderingContext2D.globalCompositeOperation
*CanvasRenderingContext2D.lineCap
*CanvasRenderingContext2D.lineDashOffset
*CanvasRenderingContext2D.lineJoin
*CanvasRenderingContext2D.lineWidth
*CanvasRenderingContext2D.miterLimit
*CanvasRenderingContext2D.shadowBlur
*CanvasRenderingContext2D.shadowColor
*CanvasRenderingContext2D.shadowOffsetX
*CanvasRenderingContext2D.shadowOffsetY
*CanvasRenderingContext2D.strokeStyle
==Text==
*CanvasRenderingContext2D.font
*CanvasRenderingContext2D.textAlign
*CanvasRenderingContext2D.textBaseline

Attributes marked with * are part of state and affected by save/restore.
Clipping region, dash list and transformation matrix are affected by save/restore too.
}

Done:
2015.02.10
transfomation added
fillText added
more drawing methods added (drawImage doesn't work)

2015.02.07
isValid: fix fixed
PathCollector checks whether arguments are complete prior to adding to path.

2015.02.06
Moved to use the prototype object for classes
Added some comments
HtmlEvents are now bound a bit different. An anonymous method is used to call the redirector method. To keep the this-context pointing to the html element in the redirector the redirectors "function.call" method is used.

2015.02.05
Event: arguments are passed as arguments beginning with 'sender' (used to be sender and a list of arguments)
Path: capable to add modes and valueLists, emits changedEvent on add
Drawer: draws objects which provide a draw(context)-method within a given rectangle, draw method matches paths changedEvent
Coder: sets the innerHTML of [HTML Object] to the code returned by objects providing toCode(nameOfContext) methods, show method matches paths changedEvent


2015.02.04
+Event: a class to handle events
pathCollectors use Event
Arg and Mode extended to be able to recreate parameter values

2015.02.03
Moved mode selection and mode input into pathCollector classes

2015.02.02
+Mode: a class representing name, arguments, description and reference.
+Mode: creates its own inputs and keeps a pointer to them.

2015.02.01:
+Path: collection by its types
+Arg: with types and validation
+creator.html: onchange on path_radio

